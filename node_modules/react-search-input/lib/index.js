'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createFilter = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Search = (0, _createReactClass2.default)({
  propTypes: {
    className: _propTypes2.default.string,
    inputClassName: _propTypes2.default.string,
    onChange: _propTypes2.default.func,
    caseSensitive: _propTypes2.default.bool,
    sortResults: _propTypes2.default.bool,
    fuzzy: _propTypes2.default.bool,
    throttle: _propTypes2.default.number,
    filterKeys: _propTypes2.default.oneOf([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),
    value: _propTypes2.default.string
  },

  getDefaultProps: function getDefaultProps() {
    return {
      className: '',
      onChange: function onChange() {},

      caseSensitive: false,
      fuzzy: false,
      throttle: 200
    };
  },
  getInitialState: function getInitialState() {
    return {
      searchTerm: this.props.value || ''
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (typeof nextProps.value !== 'undefined' && nextProps.value !== this.props.value) {
      var e = {
        target: {
          value: nextProps.value
        }
      };
      this.updateSearch(e);
    }
  },
  render: function render() {
    var _props = this.props,
        className = _props.className,
        onChange = _props.onChange,
        caseSensitive = _props.caseSensitive,
        sortResults = _props.sortResults,
        throttle = _props.throttle,
        filterKeys = _props.filterKeys,
        value = _props.value,
        fuzzy = _props.fuzzy,
        inputClassName = _props.inputClassName,
        inputProps = _objectWithoutProperties(_props, ['className', 'onChange', 'caseSensitive', 'sortResults', 'throttle', 'filterKeys', 'value', 'fuzzy', 'inputClassName']); // eslint-disable-line no-unused-vars


    inputProps.type = inputProps.type || 'search';
    inputProps.value = this.state.searchTerm;
    inputProps.onChange = this.updateSearch;
    inputProps.className = inputClassName;
    inputProps.placeholder = inputProps.placeholder || 'Search';
    return _react2.default.createElement(
      'div',
      { className: className },
      _react2.default.createElement('input', inputProps)
    );
  },
  updateSearch: function updateSearch(e) {
    var _this = this;

    var searchTerm = e.target.value;
    this.setState({
      searchTerm: searchTerm
    }, function () {
      if (_this._throttleTimeout) {
        clearTimeout(_this._throttleTimeout);
      }

      _this._throttleTimeout = setTimeout(function () {
        return _this.props.onChange(searchTerm);
      }, _this.props.throttle);
    });
  },
  filter: function filter(keys) {
    var _props2 = this.props,
        filterKeys = _props2.filterKeys,
        caseSensitive = _props2.caseSensitive,
        fuzzy = _props2.fuzzy,
        sortResults = _props2.sortResults;

    return (0, _util.createFilter)(this.state.searchTerm, keys || filterKeys, { caseSensitive: caseSensitive, fuzzy: fuzzy, sortResults: sortResults });
  }
});

exports.default = Search;
exports.createFilter = _util.createFilter;